class Counter{constructor({uid:t,label:e,type:i,grade:o,image:s}){this.id=t,this.label=e,this.type=i,this.grade=o,this.image=s,this.count=this.loadCount(),this.lastModified=this.loadLastModified(),this.element=this.createCounterElement(),this.updateDisplay(),this.updateGradientBackground()}createCounterElement(){const t=document.createElement("div");t.className="counter",t.innerHTML=`\n      <div class="counter-header">\n        <img src="${this.image}" alt="${this.label}" class="counter-image">\n        <span class="counter-label">${this.label}</span>\n      </div>\n      <div class="counter-controls">\n        <button class="decrement">-</button>\n        <span class="counter-value" id="${this.id}">${this.count}</span>\n        <button class="increment">+</button>\n      </div>\n      <div class="last-modified">최근 수정: ${this.getFormattedLastModified()}</div>\n    `;const e=t.querySelector(".decrement"),i=t.querySelector(".increment");return e.addEventListener("click",(()=>this.changeCount(-1))),i.addEventListener("click",(()=>this.changeCount(1))),t}getFormattedLastModified(){return this.lastModified?new Date(this.lastModified).toLocaleString():"없음"}changeCount(t){if(!localStorage.getItem("userNickname"))return void alert("닉네임을 먼저 설정해주세요.");if(t<0&&0===this.count)return;const e=this.count;this.count+=t,this.updateDisplay(),this.saveCount(),this.updateGradientBackground(),this.count!==e&&this.updateLastModified(),this.copyToClipboard()}copyToClipboard(){const t=localStorage.getItem("userNickname")||"UNKNOWN",e=new Date(this.lastModified).toLocaleString("ko-KR",{month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit",hour12:!1}).replace(/[. :]/g,""),i=`${t.toUpperCase()} ${e} ${this.label} ${this.grade} ${this.count}클`;navigator.clipboard.writeText(i).then((()=>{console.log("텍스트가 클립보드에 복사되었습니다: "+i),this.showCopiedTooltip(i)})).catch((t=>{console.error("클립보드 복사 중 오류 발생: ",t)}))}showCopiedTooltip(t){const e=document.createElement("div");e.className="copy-tooltip",e.innerHTML=`복사됨!<br><span class="copied-text">${t}</span>`,document.body.appendChild(e);const i=window.innerWidth||document.documentElement.clientWidth;window.innerHeight||document.documentElement.clientHeight,e.style.left=i/2+"px",e.style.top="20px",setTimeout((()=>{e.style.opacity="1",e.style.transform="translate(-50%, 0) scale(1)"}),10),setTimeout((()=>{e.style.opacity="0",e.style.transform="translate(-50%, 0) scale(0.9)",setTimeout((()=>{e.remove()}),300)}),2e3)}showLastModified(){if(this.lastModified){const t=document.createElement("div");t.className="tooltip",t.textContent=`최근 수정: ${new Date(this.lastModified).toLocaleString()}`,document.addEventListener("mousemove",(e=>{t.style.left=`${e.clientX+10}px`,t.style.top=`${e.clientY+10}px`})),document.body.appendChild(t),this.tooltipElement=t}}hideLastModified(){this.tooltipElement&&(this.tooltipElement.remove(),this.tooltipElement=null)}increase(){this.count++,this.updateDisplay(),this.saveCount(),this.updateLastModified()}decrease(){this.count>0&&(this.count--,this.updateDisplay(),this.saveCount(),this.updateLastModified())}saveCount(){localStorage.setItem(`counter_${this.id}`,this.count)}loadCount(){return parseInt(localStorage.getItem(`counter_${this.id}`))||0}updateLastModified(){this.lastModified=Date.now(),localStorage.setItem(`lastModified_${this.id}`,this.lastModified);const t=this.element.querySelector(".last-modified");t&&(t.textContent=`최근 수정: ${this.getFormattedLastModified()}`)}loadLastModified(){const t=localStorage.getItem(`lastModified_${this.id}`);return t?parseInt(t):null}updateDisplay(){const t=this.element.querySelector(`#${this.id}`);t&&(t.textContent=this.count)}appendTo(t){t.appendChild(this.element)}updateGradientBackground(){console.log("updateGradientBackground",this.count);const t=Math.min(this.count/100,1);this.element.style.setProperty("--fill-percentage",t)}}window.Counter=Counter;